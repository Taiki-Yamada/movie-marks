{"version":3,"sources":["components/MovieList.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["MovieList","props","listName","listType","useState","movies","setMovies","addCount","setAddCount","movieDetail","setMovieDetail","toggle","index","modalToggle","setModalToggle","useEffect","fetch","then","res","json","list","results","className","map","movie","onClick","id","detail","createModal","src","poster_path","original_title","release_date","homepage","CSSTransition","classNames","in","timeout","unmountOnExit","setTimeout","Math","floor","runtime","overview","href","target","rel","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.409e30b5.chunk.js","sourcesContent":["import {useState,useEffect} from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nexport const MovieList = (props) => {\r\n  const {listName, listType} = props;\r\n\r\n  const [movies, setMovies] = useState([]);\r\n  const [addCount, setAddCount] = useState(1);\r\n  const [movieDetail, setMovieDetail] = useState({});\r\n  const [modalToggle, setModalToggle] = useState({toggle:false, index:null});\r\n\r\n  useEffect(() => {\r\n    // 映画のリストを取得\r\n    fetch(`https://api.themoviedb.org/3/movie/${listType}?api_key=444108a040de72eeab7424dedf91ca28&language=en-JA&page=${addCount}`)\r\n    .then(res => res.json())\r\n    .then(list => {\r\n      setMovies([...movies, ...list.results])\r\n    })\r\n  },[addCount]);\r\n\r\n  // リストの取得回数をカウント\r\n  const addCountUp = () => {\r\n    setAddCount(addCount+1);\r\n  }\r\n\r\n  // 映画の詳細を取得\r\n  const createModal = (index) => {\r\n    fetch(`https://api.themoviedb.org/3/movie/${movies[index].id}?api_key=444108a040de72eeab7424dedf91ca28`)\r\n      .then(res => res.json())\r\n      .then(detail => {\r\n        setMovieDetail(detail);\r\n      })\r\n  }\r\n\r\n  // モーダル表示時にスクロールを禁止\r\n  // const disableScroll = (event) => {\r\n  //   event.preventDefault();\r\n  // }\r\n  \r\n  return (\r\n      <>  \r\n        <h2>{listName}</h2>\r\n        <ul className=\"movieList\">\r\n          {movies.map((movie, index) => {\r\n            return (\r\n              <li key={index} className=\"movieContainer\" onClick={() => {setModalToggle({toggle:true, index}); createModal(index); }}>\r\n                  <img src={`https://image.tmdb.org/t/p/w185${movie.poster_path}`} />\r\n                  <p>{movie.original_title}</p>\r\n                  <time>{movie.release_date}</time>\r\n                  <p>{movie.homepage}</p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <div className=\"moreBtn\" onClick={addCountUp}>MORE</div>\r\n\r\n        <CSSTransition classNames=\"mask\" in={modalToggle.toggle} timeout={300} unmountOnExit>\r\n          <div className=\"mask\" onClick={() => {setModalToggle({toggle:false, index:modalToggle.index}); setTimeout(() => setMovieDetail({}), 300)}}></div>\r\n        </CSSTransition>\r\n        <CSSTransition classNames=\"modal\" in={modalToggle.toggle} timeout={300} unmountOnExit>\r\n          <div className=\"modal\">\r\n            <h3 className=\"modalTitle\">{movieDetail.original_title}</h3>\r\n            {movieDetail.release_date && <p className=\"modalFacts\">{`${movieDetail.release_date}, ${Math.floor(movieDetail.runtime/60)}h${movieDetail.runtime%60}min`}</p>}\r\n            <div className=\"modalImgOverviewContainer\">\r\n              {movieDetail.poster_path && <img src={`https://image.tmdb.org/t/p/w185${movieDetail.poster_path}`} />}\r\n              <p>{movieDetail.overview}</p>\r\n            </div>\r\n            <div className=\"modalBtn\">\r\n              <a className=\"homepageBtn\" href={movieDetail.homepage} target=\"_blank\" rel=\"noopener noreferrer\">HOME PAGE</a>\r\n              <div className=\"closeModal\" onClick={() => {setModalToggle({toggle:false, index:modalToggle.index}); setTimeout(() => setMovieDetail({}), 300)}}>CLOSE</div>\r\n            </div>\r\n          </div>\r\n        </CSSTransition>\r\n      </>\r\n  )\r\n}","import './App.css';\nimport {MovieList} from \"./components/MovieList\";\n\nexport const App = () => {\n  return (\n    <>\n      <header>\n        <h1>Movie Marks</h1>\n      </header>\n      <section className=\"popularMoviesSection\">\n        <MovieList listName=\"Popular Movies\" listType=\"popular\" />\n      </section>\n      <section className=\"nowPlayingMoviesSection\">\n        <MovieList listName=\"Now Playing Movies\" listType=\"now_playing\" />\n      </section>\n      <footer>\n        <p className=\"copyright\">Copyright © 2022 Taiki All Rights Reserved.</p>\n      </footer>\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}